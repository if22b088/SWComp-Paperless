services:
  rest-api:
    build: ./backend
    ports:
      - "8081:8081"
    depends_on:
      rabbitmq:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    networks:
      - app-network

  ui:
    build: ./frontend
    ports:
      - "80:80"
    networks:
      - app-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - app-network

  adminer:
    image: adminer
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: galkaev
    depends_on:
      - postgres
    ports:
      - "9091:8080"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:4.0.3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_LOGS: "-warn"
    ports:
      - "5672:5672"   # messaging
      - "9093:15672" # management UI
    networks:
      - app-network

  ocr-service:
    build: ./OCR
    environment:
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USER}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    depends_on:
      rabbitmq:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    networks:
      - app-network

  minio:
    image: quay.io/minio/minio
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_LOGGER_LEVEL: "ERROR"
    ports:
      - "9000:9000"  #api
      - "9090:9001"  #webUI/console
    command: server /data --console-address ":9001"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.5
    environment:
      - discovery.type=single-node # uses single-node mode
      - ES_JAVA_OPTS=-Xms512m -Xmx512m # limits the used memory to 512MB
      - xpack.security.enabled=false # Disable security (no HTTPS, no authentication)
      - xpack.security.http.ssl.enabled=false
      - logger.level=ERROR
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.5
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      LOGGING_ROOT_LEVEL: warn # root log level set to warning
      #LOGGING_QUIET: "true" # no startup messages
    depends_on:
      - elasticsearch
    ports:
      - "9092:5601"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge